{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fetcher","fetch","then","response","json","Marker","children","App","proxyurl","useState","page","SetPage","poiTable","SetPoiTable","filteredPoi","SetFilteredPoi","SetPoiGeo","dataType","SetDatatype","hourlyStats","SetHourlyStats","dailyStats","SetDailyStats","hourlyEvent","SetHourlyEvent","dailyEvent","SetDailyEvent","eventVisual","SetEventVisual","eventVisualSelected","SetEventVisualSelected","useEffect","data","array","forEach","element","push","Date","date","toDateString","parseInt","events","hour","impressions","clicks","revenue","arrTable","arrGeo","v","poi_id","f","toString","p","style","name","lat","lon","mapRef","useRef","bounds","setBounds","zoom","setZoom","useSwr","error","points","slice","map","poi","type","properties","cluster","poiId","geometry","coordinates","parseFloat","useSupercluster","options","radius","maxZoom","clusters","supercluster","defaultProps","center","lng","className","item","index","value","onClick","onChange","e","chartType","width","height","explorer","chart","title","length","placeholder","val","filteredArr","filter","includes","toLowerCase","unfilteredArr","temp","searchFunc","target","showRowNumber","allowHtml","bootstrapURLKeys","key","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","current","nw","se","longitude","latitude","isCluster","pointCount","point_count","expansionZoom","Math","min","getClusterExpansionZoom","id","panTo","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.37fffea1.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect , useRef} from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport useSupercluster from \"use-supercluster\"\r\nimport useSwr from \"swr\";\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nfunction App() {\r\n\r\n  const proxyurl = \"https://vast-glass-iron.glitch.me\"\r\n  const pages = [\"General Charts\", \"Data Table\", \"Geo Map\"];\r\n  const [page,SetPage] = useState(0)  \r\n\r\n  const poiHeader = [\"Id\",\"Name\",\"Latitude\",\"Longitude\"];\r\n  const [poiTable,SetPoiTable] = useState(null)\r\n  const [filteredPoi,SetFilteredPoi] = useState(null)\r\n  \r\n  const [poiGeo,SetPoiGeo] = useState(null)\r\n\r\n  const [dataType,SetDatatype] = useState(0)\r\n\r\n  const [hourlyStats,SetHourlyStats] = useState(null)\r\n  const [dailyStats,SetDailyStats] = useState(null)\r\n\r\n  const [hourlyEvent,SetHourlyEvent] = useState(null)\r\n  const [dailyEvent,SetDailyEvent] = useState(null)\r\n  const visuals = [\"Line\", \"Bar\", \"LineChart\", \"BarChart\"];\r\n  const [eventVisual,SetEventVisual] = useState(\"Line\")  \r\n  const [eventVisualSelected,SetEventVisualSelected] = useState(0)  \r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    hourlyEvent === null && fetch(proxyurl+'/events/hourly').then(response => response.json()).then(data => {\r\n      let array = [[\"Date\",\"Events\",\"Hour\"]];\r\n      data.forEach(element => {\r\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.events),element.hour])\r\n      });\r\n      SetHourlyEvent(array)\r\n    });\r\n    dailyEvent === null && fetch(proxyurl+'/events/daily').then(response => response.json()).then(data => {\r\n      let array = [[\"Date\",\"Events\"]];\r\n      data.forEach(element => {\r\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.events)])\r\n      });\r\n      SetDailyEvent(array)\r\n    });\r\n    \r\n    hourlyStats=== null && fetch(proxyurl+'/stats/hourly').then(response => response.json()).then(data => {\r\n      let array = [[\"date\",\"hour\",\"impressions\",\"clicks\", \"revenue\"]];\r\n      data.forEach(element => {\r\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.hour),parseInt(element.impressions),parseInt(element.clicks),parseInt(element.revenue)])\r\n      });\r\n      SetHourlyStats(array)\r\n    });\r\n    dailyStats === null && fetch(proxyurl+'/stats/daily').then(response => response.json()).then(data => {\r\n      let array = [[\"date\",\"impressions\",\"clicks\", \"revenue\"]];\r\n      data.forEach(element => {\r\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.impressions),parseInt(element.clicks),parseInt(element.revenue)])\r\n      });\r\n      SetDailyStats(array)\r\n    });\r\n    \r\n    poiTable === null && fetch(proxyurl+'/poi').then(response => response.json()).then(data => {\r\n      let arrTable = [];\r\n      let arrGeo = [];\r\n      data.forEach(element => {\r\n        arrTable.push([{ v: element.poi_id, f: element.poi_id.toString(), p: {style: ''} },{ v: element.name, f: element.name, p: {style: ''} },{ v: element.lat, f: element.lat.toString(), p: {style: ''} },{ v: element.lon, f: element.lon.toString(), p: {style: ''} } ]);\r\n        \r\n        arrGeo.push([element.lat , element.lon , element.name]);\r\n      });\r\n      SetFilteredPoi(arrTable)\r\n      SetPoiTable(arrTable)\r\n      SetPoiGeo(arrGeo)\r\n      \r\n    });\r\n  });\r\n\r\n  const mapRef = useRef();\r\n  const [bounds, setBounds] = useState(null);\r\n  const [zoom, setZoom] = useState(10);\r\n  const url = proxyurl+'/poi';\r\n  const { data, error } = useSwr(url, { fetcher });\r\n  const crimes = data && !error ? data.slice(0, 2000) : [];\r\n  const points = crimes.map(poi => ({\r\n    type: \"Feature\",\r\n    properties: { cluster: false, poiId: poi.poi_id, name: poi.name },\r\n    geometry: {\r\n      type: \"Point\",\r\n      coordinates: [\r\n        parseFloat(poi.lon),\r\n        parseFloat(poi.lat)\r\n      ]\r\n    }\r\n  }));\r\n const { clusters, supercluster } = useSupercluster({\r\n    points,\r\n    bounds,\r\n    zoom,\r\n    options: { radius: 75, maxZoom: 20 }\r\n  });\r\n\r\n  function searchFunc(val){\r\n    poiTable.forEach(element => {\r\n      element.forEach(item => {\r\n        item.p.style = \"\";\r\n      });\r\n    });\r\n    let filteredArr = poiTable.filter( element =>{ return element[0].f.includes(val) || element[1].f.toLowerCase().includes(val) || element[2].f.includes(val) || element[3].f.includes(val) });\r\n    let unfilteredArr = poiTable.filter( element =>{ return !element[0].f.includes(val) && !element[1].f.toLowerCase().includes(val) && !element[2].f.includes(val) && !element[3].f.includes(val) });\r\n    filteredArr.length > 0 && SetFilteredPoi(() => {\r\n      let temp = [...filteredArr];\r\n      if(val.length > 0){\r\n        [...temp].forEach(element => {\r\n          element.forEach(item => {\r\n            item.p.style = \"background-color:#baff9d;\";\r\n          });\r\n        });\r\n      }\r\n      return [...temp, ...unfilteredArr];\r\n    });\r\n  }\r\n\r\n  const defaultProps = {\r\n    center: {\r\n      lat: 51.231487,\r\n      lng: -99.306211\r\n    },\r\n    zoom: 5\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className=\"topNav\">\r\n        {\r\n          pages.map((item , index)=>{\r\n            return (\r\n              <li key={index}>\r\n                <input type=\"button\" value={item} className={page === index ? \"selectedButton\" : ''} onClick={() => { SetPage(index) }}/>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      {\r\n        page === 0 && <div>\r\n        <ul className=\"leftNav\">\r\n        <li>\r\n          <label className={dataType === 0 ? \"selectedButton\" : ''}>\r\n            <input type=\"radio\" value={0} name=\"dataType\" onChange={ (e) => {SetDatatype(0)}} /> Events\r\n          </label>\r\n          <label className={dataType === 1 ? \"selectedButton\" : ''}>\r\n            <input type=\"radio\" value={1} name=\"dataType\" onChange={ (e) => {SetDatatype(1)}} /> Stats\r\n          </label>\r\n        </li>\r\n        <br /><br /><br />\r\n        {\r\n          visuals.map((item , index)=>{\r\n            return (\r\n              <li key={index}>\r\n                <input type=\"button\" value={item} className={eventVisualSelected === index ? \"selectedButton\" : ''} onClick={() => { SetEventVisual(item); SetEventVisualSelected(index); }}/>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      <div className=\"view\">\r\n\r\n      {\r\n        dataType === 1 ? <>\r\n        {\r\n        dailyStats ? <Chart chartType={eventVisual} width=\"96%\" height=\"400px\" data={dailyStats} options={{\r\n          explorer: {},\r\n          chart: {\r\n            title: \"Events Daily\"\r\n          },\r\n        }} /> : <div>Loading chart...</div>\r\n      }\r\n      <br /><br />\r\n      {\r\n        hourlyEvent ? <Chart chartType={eventVisual} width=\"96%\" height=\"400px\" data={hourlyStats} options={{\r\n          explorer: {},\r\n          chart: {\r\n            title: \"Events Hourly\"\r\n          },\r\n        }} /> : <div>Loading chart...</div>\r\n      }\r\n        </> : <>\r\n        {\r\n        dailyEvent ? <Chart chartType={eventVisual} width=\"96%\" height=\"400px\" data={dailyEvent} options={{\r\n          explorer: {},\r\n          chart: {\r\n            title: \"Events Daily\"\r\n          },\r\n        }} />: <div>Loading chart...</div>\r\n        }\r\n        <br /><br />\r\n        {\r\n          hourlyEvent ? <Chart chartType={eventVisual} width=\"96%\" height=\"400px\" data={hourlyEvent} options={{\r\n            explorer: {},\r\n            chart: {\r\n              title: \"Events Hourly\"\r\n            },\r\n          }} /> : <div>Loading chart...</div>\r\n        }\r\n        </>\r\n      }\r\n      </div> \r\n        </div>\r\n      }\r\n      {\r\n        page === 1 && <>\r\n        {\r\n          poiTable && poiTable.length ? <div className='view noNav'>\r\n          <input type=\"text\" placeholder='Search here...' onChange={(e)=>{ searchFunc(e.target.value.toLowerCase()) }}/>\r\n          <Chart chartType=\"Table\" width=\"100%\" height=\"100%\" data={[poiHeader , ...filteredPoi]} options={{\r\n            showRowNumber: false, \r\n            allowHtml: true,\r\n          }} />\r\n        </div>: <div>Loading table...</div>\r\n        }\r\n        </>\r\n      }\r\n      {\r\n        page === 2 && clusters &&<div className='view noNav'>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyAKm8MCGBPYCd9mwXqXtHYf_vFM2BtglIA\" }}\r\n        defaultCenter={defaultProps.center}\r\n        defaultZoom={defaultProps.zoom}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        onGoogleApiLoaded={({ map }) => {\r\n          mapRef.current = map;\r\n        }}\r\n        onChange={({ zoom, bounds }) => {\r\n          setZoom(zoom);\r\n          setBounds([\r\n            bounds.nw.lng,\r\n            bounds.se.lat,\r\n            bounds.se.lng,\r\n            bounds.nw.lat\r\n          ]);\r\n        }}\r\n      >\r\n        {  clusters.map(cluster => {\r\n          const [longitude, latitude] = cluster.geometry.coordinates;\r\n          const {\r\n            cluster: isCluster,\r\n            point_count: pointCount\r\n          } = cluster.properties;\r\n\r\n          if (isCluster) {\r\n            return (\r\n              <Marker\r\n                key={`cluster-${cluster.id}`}\r\n                lat={latitude}\r\n                lng={longitude}\r\n              >\r\n                <div\r\n                  className=\"cluster-marker\"\r\n                  style={{\r\n                    width: `${10 + (pointCount / points.length) * 20}px`,\r\n                    height: `${10 + (pointCount / points.length) * 20}px`\r\n                  }}\r\n                  onClick={() => {\r\n                    const expansionZoom = Math.min(\r\n                      supercluster.getClusterExpansionZoom(cluster.id),\r\n                      20\r\n                    );\r\n                    mapRef.current.setZoom(expansionZoom);\r\n                    mapRef.current.panTo({ lat: latitude, lng: longitude });\r\n                  }}\r\n                >\r\n                  {pointCount}\r\n                </div>\r\n              </Marker>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <Marker\r\n              key={`poi-${cluster.properties.poiId}`}\r\n              lat={latitude}\r\n              lng={longitude}\r\n            >\r\n              <button className=\"poi-marker\">\r\n                <img src=\"https://img.icons8.com/plasticine/100/000000/place-marker.png\" alt=\"poi doesn't pay\" />\r\n                <span>{cluster.properties.name}</span>\r\n              </button>\r\n            </Marker>\r\n          );\r\n        })}\r\n      </GoogleMapReact>\r\n        </div>\r\n      }\r\n    </div>\r\n    \r\n  );\r\n}\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nconst Marker = ({ children }) => children;\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n // <React.StrictMode>\n    <App />\n  //</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}