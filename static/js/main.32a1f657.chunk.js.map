{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","proxyurl","useState","page","SetPage","poiTable","SetPoiTable","filteredPoi","SetFilteredPoi","poiGeo","SetPoiGeo","hourlyEvent","SetHourlyEvent","dailyEvent","SetDailyEvent","eventVisual","SetEventVisual","eventVisualSelected","SetEventVisualSelected","searchFunc","val","forEach","element","item","p","style","filteredArr","filter","f","includes","toLowerCase","unfilteredArr","length","temp","useEffect","fetch","then","response","json","data","array","push","Date","date","toDateString","parseInt","events","hour","arrTable","arrGeo","v","poi_id","toString","name","lat","lon","className","map","index","type","value","onClick","chartType","width","height","options","chart","title","placeholder","onChange","e","target","showRowNumber","allowHtml","region","displayMode","colorAxis","colors","backgroundColor","datalessRegionColor","geochartVersion","resolution","tooltip","showColorCode","trigger","magnifyingGlass","enable","zoomFactor","explorer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.32a1f657.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\nimport { Chart } from \"react-google-charts\";\n\nexport const options = {\n  chart: {\n    title: \"Box Office Earnings in First Two Weeks of Opening\",\n    subtitle: \"in millions of dollars (USD)\",\n  },\n};\nfunction App() {\n\n  const proxyurl = \"https://vast-glass-iron.glitch.me\"\n  const pages = [\"General Chart Visualization\", \"Data Table\", \"Geo Visualization\"];\n  const [page,SetPage] = useState(0)  \n\n  const poiHeader = [\"Id\",\"Name\",\"Latitude\",\"Longitude\"];\n  const [poiTable,SetPoiTable] = useState(null)\n  const [filteredPoi,SetFilteredPoi] = useState(null)\n  \n  const [poiGeo,SetPoiGeo] = useState(null)\n\n  const [hourlyEvent,SetHourlyEvent] = useState(null)\n  const [dailyEvent,SetDailyEvent] = useState(null)\n  const visuals = [\"Line\", \"Bar\", \"LineChart\", \"BarChart\"];\n  const [eventVisual,SetEventVisual] = useState(\"Line\")  \n  const [eventVisualSelected,SetEventVisualSelected] = useState(0)  \n  \n  useEffect(() => {\n    hourlyEvent === null && fetch(proxyurl+'/events/hourly').then(response => response.json()).then(data => {\n      let array = [[\"Date\",\"Events\",\"Hour\"]];\n      data.forEach(element => {\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.events),element.hour])\n      });\n      SetHourlyEvent(array)\n    });\n  }, [hourlyEvent]);\n\n  useEffect(() => {\n    dailyEvent === null && fetch(proxyurl+'/events/daily').then(response => response.json()).then(data => {\n      let array = [[\"Date\",\"Events\"]];\n      data.forEach(element => {\n        array.push([(new Date(element.date)).toDateString(),parseInt(element.events)])\n      });\n      SetDailyEvent(array)\n    });\n  }, [dailyEvent]);\n\n  useEffect(() => {\n    poiTable === null && fetch(proxyurl+'/poi').then(response => response.json()).then(data => {\n      let arrTable = [];\n      let arrGeo = [['Lat', 'Long', 'Name']];\n      data.forEach(element => {\n        arrTable.push([{ v: element.poi_id, f: element.poi_id.toString(), p: {style: ''} },{ v: element.name, f: element.name, p: {style: ''} },{ v: element.lat, f: element.lat.toString(), p: {style: ''} },{ v: element.lon, f: element.lon.toString(), p: {style: ''} } ]);\n\n        arrGeo.push([element.lat , element.lon , element.name]);\n      });\n      SetFilteredPoi(arrTable)\n      SetPoiTable(arrTable)\n      SetPoiGeo(arrGeo)\n    });\n  }, [poiTable]);\n  function searchFunc(val){\n    poiTable.forEach(element => {\n      element.forEach(item => {\n        item.p.style = \"\";\n      });\n    });\n    let filteredArr = poiTable.filter( element =>{ return element[0].f.includes(val) || element[1].f.toLowerCase().includes(val) || element[2].f.includes(val) || element[3].f.includes(val) });\n    let unfilteredArr = poiTable.filter( element =>{ return !element[0].f.includes(val) && !element[1].f.toLowerCase().includes(val) && !element[2].f.includes(val) && !element[3].f.includes(val) });\n    filteredArr.length > 0 && SetFilteredPoi(() => {\n      let temp = [...filteredArr];\n      if(val.length > 0){\n        [...temp].forEach(element => {\n          element.forEach(item => {\n            item.p.style = \"background-color:#baff9d;\";\n          });\n        });\n      }\n      return [...temp, ...unfilteredArr];\n    });\n  }\n  return (\n    <div className=\"App\">\n      <ul className=\"topNav\">\n        {\n          pages.map((item , index)=>{\n            return (\n              <li key={index}>\n                <input type=\"button\" value={item} className={page === index ? \"selectedButton\" : ''} onClick={() => { SetPage(index) }}/>\n              </li>\n            )\n          })\n        }\n      </ul>\n      {\n        page === 0 && <div>\n        <ul className=\"leftNav\">\n        {\n          visuals.map((item , index)=>{\n            return (\n              <li key={index}>\n                <input type=\"button\" value={item} className={eventVisualSelected === index ? \"selectedButton\" : ''} onClick={() => { SetEventVisual(item); SetEventVisualSelected(index); }}/>\n              </li>\n            )\n          })\n        }\n      </ul>\n      <div className=\"view\">\n      {\n        dailyEvent && <Chart chartType={eventVisual} width=\"100%\" height=\"400px\" data={dailyEvent} options={{\n          chart: {\n            title: \"Events Daily\"\n          },\n        }} />\n      }\n      <br /><br />\n      {\n        hourlyEvent && <Chart chartType={eventVisual} width=\"100%\" height=\"400px\" data={hourlyEvent} options={{\n          chart: {\n            title: \"Events Hourly\"\n          },\n        }} />\n      }  \n      </div> \n        </div>\n      }\n      {\n        page === 1 && poiTable && poiTable.length && <div className='view noNav'>\n          <input type=\"text\" placeholder='Search here...' onChange={(e)=>{ searchFunc(e.target.value.toLowerCase()) }}/>\n          <Chart chartType=\"Table\" width=\"100%\" height=\"100%\" data={[poiHeader , ...filteredPoi]} options={{\n            showRowNumber: false, \n            allowHtml: true,\n          }} />\n        </div>\n      }\n      {\n        page === 2 && poiTable && poiTable.length && <div className='view noNav'>\n          <input type=\"text\" placeholder='Search here...' onChange={(e)=>{ searchFunc(e.target.value.toLowerCase()) }}/>\n          <Chart chartType=\"GeoChart\" width=\"100%\" height=\"100%\" data={poiGeo} options={{\n            region: \"CA\",\n            displayMode: 'markers',\n            colorAxis: {colors: ['green', 'blue']},\n            backgroundColor: \"#81d4fa\",\n            datalessRegionColor: \"#f3f3f3\",\n            geochartVersion: 11,\n            resolution : \"provinces\",\n            tooltip: {showColorCode: true , trigger : \"selection\"},\n            magnifyingGlass : {enable: true, zoomFactor: 15},\n            explorer : true\n          }} />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n // <React.StrictMode>\n    <App />\n  //</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}